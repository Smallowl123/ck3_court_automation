chief_qadi_court_position = {
	max_available_positions = 1
	category = court_position_category_special
	minimum_rank = kingdom	# Should only be available for kings and emperors
	opinion = {
		value = ceremonial_court_position_opinion
	}
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = {
		20
		40
		60
		80
	}
	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = learning
			multiply = 2.5
			max = 50
			desc = court_position_skill_learning
		}
		if = {
			limit = {
				has_trait = generous
			}
			add = {
				value = 15
				desc = court_position_generous_trait
			}
		}
		if = {
			limit = {
				has_trait = just
			}
			add = {
				value = 15
				desc = court_position_just_trait
			}
		}
		if = {
			limit = {
				has_trait = temperate
			}
			add = {
				value = 15
				desc = court_position_temperate_trait
			}
		}
		if = {
			limit = {
				has_trait = scholar
			}
			add = {
				value = 15
				desc = court_position_scholar_trait
			}
		}
		if = {
			limit = {
				has_trait = greedy
			}
			add = {
				value = -10
				desc = court_position_greedy_trait
			}
		}
		if = {
			limit = {
				has_trait = arbitrary
			}
			add = {
				value = -10
				desc = court_position_arbitrary_trait
			}
		}
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}
	# Is this an available position for this court? (root is court owner)
	is_shown = {
		has_religion = religion:islam_religion
	}
	valid_position = {
		has_religion = religion:islam_religion
		highest_held_title_tier >= tier_kingdom
	}
	is_shown_character = {
		scope:employee = {
			is_imprisoned = no
		}
	}
	valid_character = {
		scope:employee = {
			has_religion = religion:islam_religion
			has_trait = education_learning
			trigger_if = {
				limit = {
					scope:liege.faith = {
						has_doctrine = doctrine_gender_male_dominated
					}
				}
				is_male = yes
			}
			trigger_if = {
				limit = {
					scope:liege.faith = {
						has_doctrine = doctrine_gender_female_dominated
					}
				}
				is_female = yes
			}
		}
	}
	revoke_cost = {
		prestige = {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = {
						has_dynasty_perk = fp2_coterie_legacy_1
					}
					employs_court_position = chief_qadi_court_position
					any_court_position_holder = {
						type = chief_qadi_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}
	salary = {
		round = no
		gold = {
			value = minor_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = {
							has_dynasty_perk = fp2_coterie_legacy_1
						}
						employs_court_position = chief_qadi_court_position
						any_court_position_holder = {
							type = chief_qadi_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = chief_qadi_court_position
						any_court_position_holder = {
							type = chief_qadi_court_position
							scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
	}
	base_employer_modifier = {
		learning_per_piety_level = 1
	}
	scaling_employer_modifiers = {
		aptitude_level_1 = {
			monthly_piety_gain_mult = 0.02
		}
		aptitude_level_2 = {
			monthly_piety_gain_mult = 0.04
		}
		aptitude_level_3 = {
			monthly_piety_gain_mult = 0.06
		}
		aptitude_level_4 = {
			monthly_piety_gain_mult = 0.08
		}
		aptitude_level_5 = {
			monthly_piety_gain_mult = 0.1
		}
	}
	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		diplomacy = 1
	}
	on_court_position_received = {
		chief_qadi_title_accepted_effect = yes
	}
	on_court_position_revoked = {
		basic_revoked_court_position_effect = yes		#chief_qadi_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes		#chief_qadi_title_invalidated_effect = yes
	}
	candidate_score = {
		value = 50
		add = scope:base_value
		add = court_position_candidate_score_base_value
		add = court_position_candidate_aptitude_value
		scope:liege = {
			if = {
				limit = {
					ai_zeal >= -25
				}
				add = 50
			}
		}
		add = court_position_debt_considerations_value
	}
}

cultural_emissary_court_position = {
	max_available_positions = 1
	category = court_position_category_special
	minimum_rank = county
	opinion = {
		value = regular_court_position_opinion
	}
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = {
		20
		40
		60
		80
	}
	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = diplomacy
			multiply = 2.5
			max = 50
			desc = court_position_skill_diplomacy
		}
		add = {
			value = num_of_known_languages
			subtract = 1
			multiply = 10
			max = 100
			desc = court_position_languages
		}
		if = {
			limit = {
				has_trait = just
			}
			add = {
				value = 15
				desc = court_position_just_trait
			}
		}
		if = {
			limit = {
				has_trait = gregarious
			}
			add = {
				value = 15
				desc = court_position_gregarious_trait
			}
		}
		if = {
			limit = {
				has_trait = diplomat
			}
			add = {
				value = 30
				desc = court_position_diplomat_trait
			}
		}
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}
	# Is this an available position for this court? (root is court owner)
	is_shown = {
		exists = dynasty
		dynasty = {
			has_dynasty_perk = ep1_culture_legacy_4
		}
	}
	is_shown_character = {
		scope:employee = {
			is_imprisoned = no
		}
	}
	# Is this a valid position for this character? Also checks the scripted rule "is_eligible_for_court_positions" in code. (root is potential position holder)
	valid_character = {
		scope:employee = {
			diplomacy >= 8
		}
	}
	revoke_cost = {
		prestige = {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = {
						has_dynasty_perk = fp2_coterie_legacy_1
					}
					employs_court_position = cultural_emissary_court_position
					any_court_position_holder = {
						type = cultural_emissary_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}
	salary = {
		round = no
		gold = {
			value = minor_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = {
							has_dynasty_perk = fp2_coterie_legacy_1
						}
						employs_court_position = cultural_emissary_court_position
						any_court_position_holder = {
							type = cultural_emissary_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = cultural_emissary_court_position
						any_court_position_holder = {
							type = cultural_emissary_court_position
							scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
	}
	scaling_employer_modifiers = {
		aptitude_level_1 = {
			different_culture_opinion = 2
			monthly_prestige = 0.1
		}
		aptitude_level_2 = {
			different_culture_opinion = 5
			monthly_prestige = 0.2
		}
		aptitude_level_3 = {
			different_culture_opinion = 10
			monthly_prestige = 0.4
		}
		aptitude_level_4 = {
			different_culture_opinion = 15
			monthly_prestige = 0.7
		}
		aptitude_level_5 = {
			different_culture_opinion = 20
			monthly_prestige = 1
		}
	}
	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	on_court_position_received = {
		cultural_emissary_title_accepted_effect = yes
	}
	on_court_position_revoked = {
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	candidate_score = {
		value = 100
		add = scope:base_value
		add = court_position_candidate_score_base_value
		add = court_position_candidate_aptitude_value
		add = court_position_debt_considerations_value
	}
}

court_artificer_court_position = {
	max_available_positions = 3
	category = court_position_category_royal
	minimum_rank = kingdom
	opinion = {
		value = ceremonial_court_position_opinion
	}
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = {
		20
		40
		60
		80
	}
	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = prowess
			desc = court_position_skill_prowess
		}
		add = {
			value = diplomacy
			desc = court_position_skill_diplomacy
		}
		add = {
			value = intrigue
			desc = court_position_skill_intrigue
		}
		add = {
			value = learning
			desc = court_position_skill_learning
		}
		add = {
			value = martial
			desc = court_position_skill_martial
		}
		add = {
			value = stewardship
			desc = court_position_skill_stewardship
		}
		if = {
			limit = {
				has_character_modifier = local_artisan_modifier
			}
			add = {
				value = -20
				desc = local_artisan_modifier
			}
		}
		add = court_position_aptitude_family_business_value
		#add = court_position_aptitude_high_penalty_value
	}
	is_shown = {
		has_royal_court = yes
		has_ep1_court_positions_dlc_trigger = yes
	}
	valid_position = {
		highest_held_title_tier >= tier_kingdom
	}
	is_shown_character = {
		scope:employee = {
			is_courtier_of = scope:liege
			OR = {
				has_completed_inspiration = yes
				custom_tooltip = {
					text = has_an_inspiration
					exists = inspiration
				}
			}
			is_imprisoned = no
		}
	}
	valid_character = {
		scope:employee = {
			custom_tooltip = {
				text = IS_NOT_THE_SPOUSE_OF_CHARACTER_COURT_POSITION
				NOT = {
					is_spouse_of = scope:liege
				}
			}
			OR = {
				custom_tooltip = {
					text = has_a_completed_inspiration
					has_completed_inspiration = yes
				}
				custom_tooltip = {
					text = has_an_inspiration
					exists = inspiration
				}
			}
			trigger_if = {
				limit = {
					NOT = {
						has_court_position = court_artificer_court_position
					}
				}
				court_position_does_not_already_have_a_job_trigger = yes				# This positions is considered a job, and cannot be held at the same tims as another similar position
			}
		}
	}
	revoke_cost = {
		prestige = {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = {
						has_dynasty_perk = fp2_coterie_legacy_1
					}
					employs_court_position = court_artificer_court_position
					any_court_position_holder = {
						type = court_artificer_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}
	salary = {
		round = no
		gold = {
			value = medium_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = {
							has_dynasty_perk = fp2_coterie_legacy_1
						}
						employs_court_position = court_artificer_court_position
						any_court_position_holder = {
							type = court_artificer_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = court_artificer_court_position
						any_court_position_holder = {
							type = court_artificer_court_position
							scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
	}
	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		aptitude_level_1 = {
			court_grandeur_baseline_add = 0
		}
		aptitude_level_2 = {
			court_grandeur_baseline_add = 1
		}
		aptitude_level_3 = {
			court_grandeur_baseline_add = 1
		}
		aptitude_level_4 = {
			court_grandeur_baseline_add = 2
		}
		aptitude_level_5 = {
			court_grandeur_baseline_add = 2
		}
	}
	custom_employer_modifier_description = court_artificer_employer_custom_effect_description
	modifier = {
		monthly_prestige = major_court_position_prestige_salary
	}
	on_court_position_received = {
		court_artificer_title_accepted_effect = yes
	}
	on_court_position_revoked = {
		basic_revoked_court_position_effect = yes
		scope:employee = {
			# Moves to pool after 1 day
			# Moving them directly here would invalidate the court position too early
			trigger_event = {
				id = courtier_guest_management.0999
				days = 1
			}
		}
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = 50
		add = scope:base_value
		add = court_position_candidate_score_base_value
		add = court_position_candidate_aptitude_value
		scope:liege = {
			# Unless you have lots of gold to spend, there's no point
			if = {
				limit = {
					short_term_gold < 500
					monthly_character_income < monthly_character_expenses_plus_fourty_percent
				}
				add = -100
			}
		}
		add = court_position_debt_considerations_value
	}
}

court_cave_hermit_position = {
	max_available_positions = 1
	category = court_position_category_special
	outfit_tags = {
		beggar_rags
	}
	is_shown = {
		has_variable = encountered_recruitable_hermit		#you need to have encountered a Court Hermit before you come up with this yourself
	}
	opinion = {
		value = regular_court_position_opinion
	}
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = {
		20
		40
		60
		80
	}
	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 25
		add = {
			value = learning
			multiply = 2.5
			max = 50
			desc = court_position_skill_diplomacy
		}
		if = {
			limit = {
				has_trait = lifestyle_mystic
				has_trait_xp = {
					trait = lifestyle_mystic
					value >= 100
				}
			}
			add = {
				value = 20
				desc = court_position_mystic_3_trait
			}
		}
		else_if = {
			limit = {
				has_trait = lifestyle_mystic
				has_trait_xp = {
					trait = lifestyle_mystic
					value >= 50
				}
			}
			add = {
				value = 10
				desc = court_position_mystic_2_trait
			}
		}
		else_if = {
			limit = {
				has_trait = lifestyle_mystic
			}
			add = {
				value = 5
				desc = court_position_mystic_1_trait
			}
		}
		if = {
			limit = {
				has_trait = lifestyle_herbalist
			}
			add = {
				value = 10
				desc = court_position_herbalist_trait
			}
		}
		if = {
			limit = {
				has_trait = lifestyle_gardener
			}
			add = {
				value = 10
				desc = court_position_gardener_trait
			}
		}
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}
	valid_position = {
	}
	is_shown_character = {
		scope:employee = {
			is_courtier_of = scope:liege
		}
	}
	valid_character = {
		scope:employee = {
			is_imprisoned = no
			custom_tooltip = {
				text = IS_NOT_THE_SPOUSE_OF_CHARACTER_COURT_POSITION
				NOT = {
					is_spouse_of = scope:liege
				}
			}
			has_trait = lifestyle_mystic
			has_trait_xp = {
				trait = lifestyle_mystic
				value >= 50
			}
			trigger_if = {
				limit = {
					NOT = {
						has_court_position = court_cave_hermit_position
					}
				}
				court_position_does_not_already_have_a_job_trigger = yes				# This positions is considered a job, and cannot be held at the same tims as another similar position
			}
		}
	}
	revoke_cost = {
		prestige = {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = {
						has_dynasty_perk = fp2_coterie_legacy_1
					}
					employs_court_position = court_cave_hermit_position
					any_court_position_holder = {
						type = court_cave_hermit_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}
	salary = {
		round = no
		gold = {
			value = court_position_antiquarian_salary			#it's cheap to maintain a hermit in a cave
			# Set to 50% if you found your hermit around (variable lasts for 5 years)
			if = {
				limit = {
					scope:liege = {
						employs_court_position = court_cave_hermit_position
						any_court_position_holder = {
							type = court_cave_hermit_position
							has_variable = found_hermit_mod
						}
					}
				}
				multiply = {
					value = 0
					desc = found_hermit_mod
				}
			}
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = {
							has_dynasty_perk = fp2_coterie_legacy_1
						}
						employs_court_position = court_cave_hermit_position
						any_court_position_holder = {
							type = court_cave_hermit_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = court_cave_hermit_position
						any_court_position_holder = {
							type = court_cave_hermit_position
							scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
	}
	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		aptitude_level_1 = {
			court_grandeur_baseline_add = 0
		}
		aptitude_level_2 = {
			court_grandeur_baseline_add = 1
			monthly_prestige = 0.1
		}
		aptitude_level_3 = {
			court_grandeur_baseline_add = 1
			monthly_prestige = 0.25
		}
		aptitude_level_4 = {
			court_grandeur_baseline_add = 2
			monthly_prestige = 0.5
		}
		aptitude_level_5 = {
			court_grandeur_baseline_add = 2
			monthly_prestige = 1
		}
	}
	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	on_court_position_received = {
		court_cave_hermit_title_accepted_effect = yes
	}
	on_court_position_revoked = {
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = 50
		scope:employee = {
			# Does the liege have a better candidate that they should be hiring instead?
			if = {
				limit = {
					scope:highest_available_aptitude > scope:employee_aptitude
				}
				add = -125
			}
			# More likely to pick a courtier with a high aptitude, less likely to pick one with low
			add = {
				value = scope:employee_aptitude
				multiply = 4
			}
		}
		add = scope:base_value
		add = court_position_candidate_score_base_value
		scope:liege = {
			# More likely for very generous characters 
			if = {
				limit = {
					ai_greed <= -75
				}
				add = 25
			}
			# Lots of gold to spend on inspirations!
			if = {
				limit = {
					gold >= 500
					monthly_character_income > monthly_character_expenses_plus_fourty_percent
				}
				add = 50
			}
		}
		add = court_position_debt_considerations_value
	}
}
